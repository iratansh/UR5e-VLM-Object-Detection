<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="ur5e_with_realsense">

  <!-- Include UR5e description -->
  <xacro:include filename="$(find ur_description)/urdf/ur5e.urdf.xacro"/>
  
  <!-- UR5e robot macro -->
  <xacro:ur5e_robot prefix="" />
  
  <!-- Camera mount properties -->
  <xacro:property name="camera_mount_mass" value="0.2"/>
  <xacro:property name="camera_mount_size_x" value="0.06"/>
  <xacro:property name="camera_mount_size_y" value="0.06"/>
  <xacro:property name="camera_mount_size_z" value="0.03"/>
  
  <!-- Camera mount link -->
  <link name="camera_mount">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_mount_size_x} ${camera_mount_size_y} ${camera_mount_size_z}"/>
      </geometry>
      <material name="mount_material">
        <color rgba="0.2 0.2 0.2 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_mount_size_x} ${camera_mount_size_y} ${camera_mount_size_z}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${camera_mount_mass}"/>
      <inertia ixx="${camera_mount_mass * (camera_mount_size_y*camera_mount_size_y + camera_mount_size_z*camera_mount_size_z) / 12.0}"
               ixy="0.0" ixz="0.0"
               iyy="${camera_mount_mass * (camera_mount_size_x*camera_mount_size_x + camera_mount_size_z*camera_mount_size_z) / 12.0}"
               iyz="0.0"
               izz="${camera_mount_mass * (camera_mount_size_x*camera_mount_size_x + camera_mount_size_y*camera_mount_size_y) / 12.0}"/>
    </inertial>
  </link>
  
  <!-- Camera mount joint (eye-in-hand configuration) -->
  <joint name="camera_mount_joint" type="fixed">
    <parent link="tool0"/>
    <child link="camera_mount"/>
    <!-- Position: 5cm forward, 8cm up from gripper, rotated to look down -->
    <origin xyz="0.05 0 0.08" rpy="0 ${pi/2} 0"/>
  </joint>
  
  <!-- RealSense D435i camera -->
  
  <!-- Camera link -->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.025 0.090 0.025"/>
      </geometry>
      <material name="camera_material">
        <color rgba="0.1 0.1 0.1 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.025 0.090 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.072"/>
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
               iyy="0.000498940" iyz="0.0"
               izz="0.003879257"/>
    </inertial>
  </link>
  
  <!-- Camera joint -->
  <joint name="camera_joint" type="fixed">
    <parent link="camera_mount"/>
    <child link="camera_link"/>
    <origin xyz="0 0 0.02" rpy="0 0 0"/>
  </joint>
  
  <!-- Camera depth optical frame -->
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>
  
  <!-- Camera depth optical frame -->
  <link name="camera_depth_optical_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
  
  <!-- Camera color optical frame -->
  <link name="camera_color_frame"/>
  <joint name="camera_color_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_color_frame"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>
  
  <!-- Camera color optical frame -->
  <link name="camera_color_optical_frame"/>
  <joint name="camera_color_optical_joint" type="fixed">
    <parent link="camera_color_frame"/>
    <child link="camera_color_optical_frame"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
  
  <!-- Gazebo RealSense plugin -->
  <gazebo reference="camera_link">
    <sensor type="depth" name="camera">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.204</horizontal_fov>
        <image>
          <width>848</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>3.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
        <ros>
          <remapping>~/image_raw:=camera/color/image_raw</remapping>
          <remapping>~/image_depth:=camera/depth/image_rect_raw</remapping>
          <remapping>~/camera_info:=camera/color/camera_info</remapping>
          <remapping>~/camera_info_depth:=camera/depth/camera_info</remapping>
          <remapping>~/points:=camera/depth/color/points</remapping>
        </ros>
        <camera_name>camera</camera_name>
        <frame_name>camera_color_optical_frame</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
    
    <!-- Material -->
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- Gazebo colors for mount -->
  <gazebo reference="camera_mount">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <!-- Transmission for joint control -->
  <xacro:include filename="$(find ur_description)/urdf/ur.transmission.xacro"/>
  <xacro:ur_arm_transmission prefix=""/>
  
  <!-- Gazebo control plugin -->
  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
      <robot_param>robot_description</robot_param>
      <robot_param_node>robot_state_publisher</robot_param_node>
      <parameters>$(find ur_robot_driver)/config/ur5e_controllers.yaml</parameters>
    </plugin>
  </gazebo>
  
</robot> 